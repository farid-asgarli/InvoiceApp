{"version":3,"sources":["API/agent.ts","Store/invoiceStore.ts","Store/userStore.ts","Store/store.ts","Store/uiStore.ts","Store/commonStore.ts","Store/projectStore.ts","Store/clientStore.ts","Store/modalStore.ts","Store/appUserStore.ts","Components/Footer/Footer.tsx","Hooks/WindowSizeHook.ts","UI/Button/ButtonPrimary.tsx","Components/Navbar/Navbar.tsx","UI/PreLoader/PreLoader.tsx","UI/Form/InputField.tsx","Components/Login/Login.tsx","UI/TitleBar/TitleBar.tsx","Models/appUser.ts","UI/Form/InputFieldSecondary.tsx","UI/Form/SelectField.tsx","Components/Users/UserForm.tsx","Components/Users/Users.tsx","Models/project.ts","Components/Projects/ProjectForm.tsx","Components/Projects/Projects.tsx","Models/client.ts","Components/Clients/ClientForm.tsx","Components/Clients/Clients.tsx","UI/Modal/ModalContainer.tsx","Models/invoice.ts","UI/Form/DateInputField.tsx","UI/Form/SwitchField.tsx","Components/Invoices/InvoiceForm.tsx","Models/searchParams.ts","Components/Invoices/Invoice.tsx","Helper/ExportToExcel.ts","Components/DashBoard/Dashboard.tsx","App.tsx","reportWebVitals.ts","Layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","error","data","status","statusText","console","log","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","k","flat","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Account","current","login","user","register","Users","list","Id","add","values","edit","id","Projects","Clients","Invoices","params","InvoiceStore","invoices","selectedInvoice","filterParams","byClient","byProject","endDate","Date","searchString","startDate","totalAmount","taxAmount","setAmounts","total","tax","setFilterParams","setInvoices","setSelectedInvoice","value","getInvoices","searchParams","forEach","x","date","invoice","success","modalStore","hide","project","projectStore","projects","filter","projectId","client","clientStore","clients","clientId","isPending","netAmount","note","info","warning","makeAutoObservable","this","reaction","calcAmounts","runInAction","URLSearchParams","append","toISOString","toString","split","String","toLowerCase","UserStore","setUser","credentials","setToken","localStorage","removeItem","setClients","invoiceStore","setProjects","appUserStore","setAppUsers","getUser","uiStore","mobileMenu","scrolled","preLoader","setPreLoader","setMobileMenu","setScrolled","handleScroll","window","scrollY","getItem","appLoaded","setAppLoaded","setItem","selectedProject","undefined","setSelectedProject","getProjects","uuid","name","selectedClient","setSelectedClient","getClients","surname","active","show","content","appUsers","selectedAppUser","setSelectedAppUser","getUsers","userList","password","deleteUser","isAdmin","StoreContext","createContext","useStore","useContext","Footer","className","to","alt","src","href","getWindowDimensions","width","innerWidth","height","innerHeight","ButtonPrimary","text","type","clickEvent","style","onClick","observer","isLoggedIn","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","document","overflow","display","exact","activeClassName","Container","PreLoader","InputField","props","useField","field","meta","touched","Label","basic","color","marginTop","Login","initialValues","email","onSubmit","setErrors","catch","validationSchema","Yup","required","handleSubmit","autoComplete","Header","as","textAlign","marginBottom","placeholder","render","TitleBar","title","subTitle","AppFormValues","InputFieldSecondary","SelectField","onChange","children","appUser","setAppUser","formik","useFormik","enableReinitialize","matches","min","max","handleSubmitCustom","handleChange","e","setValues","target","margin","length","scope","map","launchEditForm","ProjectFormValues","setProject","ClientFormValues","setClient","Modal","onHide","closeButton","Title","Body","InvoiceFormValues","DateInputField","isEnd","isStart","showFullMonthYearPicker","selectsStart","selectsEnd","selected","SwitchField","htmlFor","label","checked","setInvoice","setFieldValue","InvoiceSearchParams","marginLeft","apiData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToXLS","getMilliseconds","format","Dashboard","finally","position","Switch","path","component","Invoice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","useLocation","scrollTo","createBrowserHistory","ReactDOM","Provider","getElementById"],"mappings":"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","file":"static/js/main.8b81e161.chunk.js","sourcesContent":["import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { store } from \"../Store/store\";\r\nimport {history} from \"../index\";\r\nimport { User, UserFormValues } from \"../Models/user\";\r\nimport { Project, ProjectFormValues } from \"../Models/project\";\r\nimport { Client, ClientFormValues } from \"../Models/client\";\r\nimport { AppFormValues, AppUser } from \"../Models/appUser\";\r\nimport { Invoice, InvoiceFormValues } from \"../Models/invoice\";\r\n\r\naxios.defaults.baseURL= 'http://localhost:5000/api';\r\n\r\naxios.interceptors.request.use(config=>{\r\n    const token = store.commonStore.token;\r\n    if(token) config.headers.Authorization = `Bearer ${token}`\r\n    return config;\r\n  })\r\n\r\n  axios.interceptors.response.use(\r\n    async (response: AxiosResponse) => response,\r\n    (error: AxiosError) => {\r\n      const { data, status, statusText, config,headers } = error.response!;\r\n      switch (status) {\r\n        case 400:\r\n          console.log(data);\r\n          if(typeof data==='string'){\r\n              toast.error(statusText);\r\n          }\r\n          if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n            history.push(\"/not-found\");\r\n          }\r\n          if (data.errors) {\r\n            const modalStateErrors = [];\r\n            for (const k in data.errors)\r\n              if (data.errors[k]) {\r\n                modalStateErrors.push(data.errors[k]);\r\n              }\r\n            throw modalStateErrors.flat();\r\n          }\r\n          break;\r\n        case 401:\r\n          // console.log(data)\r\n          if(status===401 && headers['www-authenticate']!=null && headers['www-authenticate'].startsWith('Bearer error=\"invalid_token\"'))\r\n          {\r\n            store.userStore.logout();\r\n            toast.error(\"Session Expired - please login again\");\r\n  \r\n          }\r\n          break;\r\n        case 404:\r\n          history.push(\"/not-found\");\r\n          break;\r\n        case 500:\r\n          store.commonStore.setServerError(data);\r\n          history.push(\"/server-error\");\r\n  \r\n          break;\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  const responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\n  const requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) =>\r\n      axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n  };\r\n\r\n  const Account={\r\n    current:()=> requests.get<User>('/account'),\r\n    login:(user:UserFormValues)=>requests.post<User>(\"/account/login\",user),\r\n    register:(user:UserFormValues)=>requests.post<User>(\"/account/register\", user),\r\n  }\r\n\r\n  const Users={\r\n    list:()=>requests.get<AppUser[]>('/user'),\r\n    delete:(Id:string)=>requests.del<void>(`/user/${Id}/deleteUser`),\r\n    add:(values:AppFormValues)=>requests.post<AppUser>('/user/register',values),\r\n    edit:(values:AppFormValues)=>requests.put<AppUser>(`/user/${values.id}/updateUser`,values)\r\n  }\r\n\r\n  const Projects ={\r\n    list:()=>requests.get<Project[]>('/project'),\r\n    delete:(Id:string)=>requests.del<void>(`/project/${Id}/deleteProject`),\r\n    add:(values:ProjectFormValues)=>requests.post<void>('/project/addProject',values),\r\n    edit:(values:ProjectFormValues)=>requests.put<void>(`/project/${values.id}/editProject`,values)\r\n\r\n  }\r\n\r\n  const Clients ={\r\n    list:()=>requests.get<Client[]>('/client'),\r\n    delete:(Id:string)=>requests.del<void>(`/client/${Id}/deleteClient`),\r\n    add:(values:ClientFormValues)=>requests.post<void>('/client/addClient',values),\r\n    edit:(values:ClientFormValues)=>requests.put<void>(`/client/${values.id}/editClient`,values)\r\n  }\r\n\r\n  const Invoices ={\r\n    list:(params:URLSearchParams)=>axios.get<Invoice[]>('/invoice',{params}).then(responseBody),\r\n    edit:(values:InvoiceFormValues)=>requests.put<void>(`/invoice/${values.id}/editInvoice`,values),\r\n    add:(values:InvoiceFormValues)=>requests.post<Invoice>(`/invoice/addInvoice`,values),\r\n    delete:(id:number)=>requests.del<void>(`/invoice/${id}/deleteInvoice`),\r\n  }\r\n  \r\n  \r\n  const agent= {\r\n    Account,\r\n    Users,\r\n    Projects,\r\n    Clients,\r\n    Invoices\r\n  }\r\n\r\n  export default agent;","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport { toast } from \"react-toastify\";\r\nimport agent from \"../API/agent\";\r\nimport { Invoice, InvoiceFormValues } from \"../Models/invoice\";\r\nimport { InvoiceSearchParams } from \"../Models/searchParams\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class InvoiceStore {\r\n  invoices: Invoice[] = [];\r\n  selectedInvoice: Invoice | undefined;\r\n  filterParams: InvoiceSearchParams = {\r\n    byClient: false,\r\n    byProject: false,\r\n    endDate: new Date('2021-12-1'),\r\n    searchString: \"\",\r\n    startDate: new Date(\"2021-1-1\"),\r\n  };\r\n  totalAmount:number=0;\r\n  taxAmount:number=0;\r\n\r\n  setAmounts=(total:number,tax:number) => {\r\n    this.totalAmount = total;\r\n    this.taxAmount = tax;\r\n  }\r\n\r\n  get calcAmounts(){\r\n    let total = 0;\r\n    let tax = 0;\r\n    this.invoices.forEach(x=>total+=x.totalAmount)\r\n    this.invoices.forEach(x=>tax+=x.taxAmount)\r\n    runInAction(()=>this.setAmounts(total,tax));\r\n    return [this.taxAmount,this.totalAmount]\r\n  }\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    reaction(\r\n      () => this.invoices,\r\n      () =>this.calcAmounts\r\n    );\r\n  }\r\n\r\n  setFilterParams = (values:InvoiceSearchParams) => {\r\n    this.filterParams = values;\r\n  }\r\n\r\n  setInvoices = (values: Invoice[]) => {\r\n    this.invoices = values;\r\n  };\r\n\r\n  setSelectedInvoice = (value: Invoice | undefined) => {\r\n    this.selectedInvoice = value;\r\n  };\r\n\r\n  get searchParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\r\n      \"startDate\",\r\n      this.filterParams.startDate!.toISOString().toString().split(\"T\")[0]\r\n    );\r\n    params.append(\r\n      \"endDate\",\r\n      this.filterParams.endDate!.toISOString().toString().split(\"T\")[0]\r\n    );\r\n    params.append(\"byProject\", String(this.filterParams.byProject));\r\n    params.append(\"byClient\", String(this.filterParams.byClient));\r\n    params.append(\"searchString\",String(this.filterParams.searchString).toLowerCase())\r\n    return params;\r\n  }\r\n\r\n  getInvoices = async () => {\r\n    try {\r\n      const Invoices = await agent.Invoices.list(this.searchParams);\r\n     \r\n      Invoices.forEach((x) => (x.date = new Date(x.date)));\r\n      this.setInvoices(Invoices);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  add = async (values: InvoiceFormValues) => {\r\n    try {\r\n      const invoice = await agent.Invoices.add(values);\r\n      invoice.date = new Date(invoice.date);\r\n      this.setInvoices([...this.invoices, invoice]);\r\n      toast.success(`Invoice № \"${invoice.id}\" got added succesfully!`);\r\n      store.modalStore.hide();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  edit = async (values: InvoiceFormValues) => {\r\n    try {\r\n      await agent.Invoices.edit(values);\r\n      store.modalStore.hide();\r\n      const project = store.projectStore.projects.filter(\r\n        (x) => x.id === values.projectId\r\n      )[0];\r\n      const client = store.clientStore.clients.filter(\r\n        (x) => x.id === values.clientId\r\n      )[0];\r\n\r\n      const invoice: Invoice = {\r\n        project: project,\r\n        client: client,\r\n        date: values.date,\r\n        id: values.id!,\r\n        isPending: values.isPending,\r\n        netAmount: values.totalAmount - values.taxAmount,\r\n        note: values.note,\r\n        taxAmount: values.taxAmount,\r\n        totalAmount: values.totalAmount,\r\n      };\r\n\r\n      this.setInvoices([\r\n        ...this.invoices.filter((x) => x.id !== values.id),\r\n        invoice,\r\n      ]);\r\n      toast.info(`Invoice № \"${values.id}\" got updated succesfully!`)\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  delete = async (id: number) => {\r\n    try {\r\n      await agent.Invoices.delete(id);\r\n      this.setInvoices([...this.invoices.filter((x) => x.id !== id)]);\r\n      toast.warning(`Invoice got deleted succesfully!`);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport { User, UserFormValues } from \"../Models/user\";\r\nimport agent from \"../API/agent\";\r\nimport { store } from \"./store\";\r\nimport { history } from \"../index\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);   \r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  setUser = (user: User | null) => (this.user = user);\r\n\r\n\r\n  login = async (credentials: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(credentials);\r\n      store.commonStore.setToken(user.token);\r\n      this.setUser(user);\r\n      console.log(user)\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n\r\n  logout = () => {\r\n    store.commonStore.token = null;\r\n    localStorage.removeItem(\"jwt\");\r\n    this.setUser(null);\r\n    store.clientStore.setClients([]);\r\n    store.invoiceStore.setInvoices([]);\r\n    store.projectStore.setProjects([]);\r\n    store.appUserStore.setAppUsers([]);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      store.commonStore.setToken(user.token);\r\n      this.setUser(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  \r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport AppUserStore from \"./appUserStore\";\r\nimport ClientStore from \"./clientStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport InvoiceStore from \"./invoiceStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProjectStore from \"./projectStore\";\r\nimport UiStore from \"./uiStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\nexport const store ={\r\n    uiStore:new UiStore(),\r\n    commonStore : new CommonStore(),\r\n    userStore : new UserStore(),\r\n    projectStore : new ProjectStore(),\r\n    clientStore: new ClientStore(),\r\n    modalStore:new ModalStore(),\r\n    appUserStore:new AppUserStore(),\r\n    invoiceStore:new InvoiceStore()\r\n}\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\nexport default class UiStore{\r\n    mobileMenu:boolean=false;\r\n    scrolled:boolean=false;\r\n    preLoader:boolean = true;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n    setPreLoader = (value:boolean) => {\r\n        this.preLoader= value;\r\n    }\r\n\r\n    setMobileMenu =(value:boolean)=>{\r\n        this.mobileMenu=value;\r\n    }\r\n    setScrolled = (value:boolean) => {\r\n        this.scrolled=value;\r\n    }\r\n\r\n     handleScroll = () => {\r\n        const offset = window.scrollY;\r\n        if (offset > 69) {\r\n          this.setScrolled(true);\r\n        } else {\r\n          this.setScrolled(false);\r\n        }\r\n      };\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../Models/serverError\";\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem(\"jwt\");\r\n    appLoaded: boolean = false;\r\n  \r\n    constructor() {\r\n      makeAutoObservable(this);\r\n  \r\n      reaction(\r\n        () => {\r\n          console.log('token yoxlanılır')  \r\n          return this.token},\r\n        (token) => {\r\n          if (token) {\r\n            window.localStorage.setItem(\"jwt\", token);\r\n          } else {\r\n            window.localStorage.removeItem(\"jwt\");\r\n  \r\n          }\r\n        }\r\n      );\r\n    }\r\n  \r\n    setServerError = (error: ServerError) => (this.error = error);\r\n  \r\n    setToken = (token: string) => {\r\n      this.token = token;\r\n    };\r\n  \r\n    setAppLoaded = () => {\r\n      this.appLoaded = true;\r\n    };\r\n  }\r\n  ","import { makeAutoObservable } from \"mobx\";\r\nimport agent from \"../API/agent\";\r\nimport { Project, ProjectFormValues } from \"../Models/project\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { store } from \"./store\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class ProjectStore {\r\n    projects:Project[] =[];\r\n    selectedProject : Project|undefined = undefined;\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setProjects = (value:Project[]) => {\r\n        this.projects = value;\r\n    }\r\n\r\n    setSelectedProject = (value:Project|undefined)=>{\r\n        this.selectedProject = value;\r\n    }\r\n\r\n    getProjects = async() => {\r\n        try {\r\n            const projects = await agent.Projects.list();\r\n            this.setProjects(projects);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    delete = async(Id:string)=>{\r\n        try {\r\n          await agent.Projects.delete(Id);\r\n          this.setProjects(this.projects.filter(x=>x.id!==Id));\r\n          toast.warning(`Project got succesfully deleted!`)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n\r\n      add = async(values:ProjectFormValues)=>\r\n      {\r\n        try {\r\n  \r\n          const project = {...values,id:uuid()};\r\n          await agent.Projects.add(project);\r\n          this.setProjects([...this.projects,project]); \r\n          toast.success(`Project \"${project.name}\" got added!`);\r\n          store.modalStore.hide();\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n  \r\n      edit = async(values:ProjectFormValues)=>\r\n      {\r\n        try {\r\n          \r\n          await agent.Projects.edit(values);\r\n          this.setProjects([...this.projects.filter(x=>x.id!==values.id),(values as Project)]);\r\n          toast.info(`Project \"${values.name}\" got updated succesfully!`)\r\n          store.modalStore.hide();\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n}","import { makeAutoObservable } from \"mobx\";\r\nimport agent from \"../API/agent\";\r\nimport { Client, ClientFormValues } from \"../Models/client\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { store } from \"./store\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\nexport default class ClientStore{\r\n  \r\n    clients:Client[]=[];\r\n    selectedClient :Client|undefined;\r\n    \r\n    \r\n    constructor() {\r\n       makeAutoObservable(this);\r\n        \r\n    }\r\n\r\n    setClients =(value:Client[]) => {\r\n        this.clients = value;\r\n    }\r\n    setSelectedClient =(value:Client|undefined) => {\r\n      this.selectedClient = value;\r\n  }\r\n\r\n    getClients = async()=>{\r\n        try {\r\n            const clients = await agent.Clients.list();\r\n            this.setClients(clients);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    delete = async(Id:string)=>{\r\n        console.log(Id);\r\n        try {\r\n          await agent.Clients.delete(Id);\r\n          this.setClients(this.clients.filter(x=>x.id!==Id));\r\n          toast.warning(`Client got successfully deleted!`);\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n\r\n    add = async(values:ClientFormValues)=>\r\n    {\r\n      try {\r\n\r\n        const client = {...values,id:uuid()};\r\n        await agent.Clients.add(client);\r\n        this.setClients([...this.clients,client]);  \r\n        toast.success(`Client \"${client.name} ${client.surname}\" got successfully added!`);\r\n        store.modalStore.hide();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    edit = async(values:ClientFormValues)=>\r\n    {\r\n      try {\r\n        \r\n        await agent.Clients.edit(values);\r\n        this.setClients([...this.clients.filter(x=>x.id!==values.id),(values as Client)]);\r\n        toast.info(`Client \"${values.name}\" got updated succesfully!`)\r\n        store.modalStore.hide();\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\";\r\n\r\nexport default class ModalStore{\r\n    active:boolean=false;\r\n    body:JSX.Element|null=null;\r\n\r\n    constructor()\r\n    {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    show=(content:JSX.Element) => {\r\n        this.active=true;\r\n        this.body= content;\r\n    }  \r\n\r\n    hide = ()=>{\r\n        this.active = false;\r\n        this.body = null;\r\n    }\r\n\r\n}","import { makeAutoObservable } from \"mobx\";\r\nimport { toast } from \"react-toastify\";\r\nimport agent from \"../API/agent\";\r\nimport { AppFormValues, AppUser } from \"../Models/appUser\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class AppUserStore{\r\n    appUsers:AppUser[]=[];\r\n    selectedAppUser : AppUser|undefined;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n    \r\n    setAppUsers= (values:AppUser[]) => {\r\n        this.appUsers = values;\r\n    }\r\n\r\n    setSelectedAppUser = (value :AppUser|undefined) => {\r\n        this.selectedAppUser = value;\r\n    }\r\n\r\n    getUsers = async()=>{\r\n        try {\r\n          const userList= await agent.Users.list();\r\n          userList.forEach(x=>x.password='');\r\n          this.setAppUsers(userList);\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n    }\r\n  \r\n    deleteUser = async(Id:string)=>{\r\n      console.log(Id);\r\n      try {\r\n        await agent.Users.delete(Id);\r\n        this.setAppUsers(this.appUsers.filter(x=>x.id!==Id));\r\n        toast.warning(`User got deleted succesfully!`)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  \r\n    add = async(values:AppFormValues)=>\r\n      {\r\n        try {\r\n  \r\n          const user = await agent.Users.add(values);;\r\n          user.password='';\r\n         this.setAppUsers([...this.appUsers,user]) \r\n          store.modalStore.hide();\r\n          toast.success(`User \"${values.name}\" got added succesfully!`)\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n  \r\n      edit = async(values:AppFormValues)=>\r\n      {\r\n        console.log(values.isAdmin)\r\n        try {\r\n         const user = await agent.Users.edit(values);\r\n          user.password='';\r\n          this.setAppUsers([...this.appUsers.filter(x=>x.id!==values.id),user]);\r\n          toast.info(`User \"${values.name}\" got updated succesfully!`);\r\n          store.modalStore.hide();\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './Footer.css';\r\n\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer id=\"footer\" className=\"site-footer\">\r\n        <div id=\"footer-inner\" className=\"site-footer-inner container\">\r\n           <div className=\"row\">\r\n            <div className=\"col-md-9\">\r\n              <div className=\"widget widget-html\">\r\n                <div className=\"textwidget\">\r\n                  <div className=\"site-logo \">\r\n                    <Link to='/'>\r\n                      <img alt=\"Joo - Niche Multi-Purpose HTML Template\" src=\"/images/logo2-white.png\"/>\r\n                      <span className=\"logo-text\">Invoice App</span>\r\n                    </Link>\r\n                  </div>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n        \r\n            <div className=\"col-md-3\">\r\n              <div className=\"widget\">\r\n                <h3 className=\"widget-title \">contact me</h3>\r\n                <div className=\"widget-links links-with-icons\">\r\n                  <ul>\r\n                    <li>\r\n                      <span className=\"icon\">\r\n                        <i className=\"icon-location-pin\"></i>\r\n                      </span>\r\n                      <a href=\"/\">github.com/faridOP</a>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"icon\">\r\n                        <i className=\"icon-location-pin\"></i>\r\n                      </span>\r\n                      <a href=\"/\">Baku, Azerbaijan</a>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"icon\">\r\n                        <i className=\"icon-envelope\"></i>\r\n                      </span>\r\n                      <a href=\"mailto:feridask17@gmail.com\">feridask17@gmail.com</a>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"icon\">\r\n                        <i className=\"icon-phone\"></i>\r\n                      </span>\r\n                      <a href=\"tel:+994508668407\">+994 50 866 84 07</a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState<{width:number,height:number}>(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React from 'react'\r\nimport './ButtonPrimary.css';\r\n\r\ninterface Props{\r\n  text:string,\r\n  clickEvent?:()=>void;\r\n  type:\"submit\"|\"button\"\r\n  style?:React.CSSProperties | undefined;\r\n}\r\n\r\n\r\nexport default function ButtonPrimary({text,type,clickEvent,style}:Props) {\r\n    return (\r\n        <button style={style} type={type} className=\"button\" onClick={clickEvent}>\r\n        <span>{text}</span>\r\n        \r\n      </button>\r\n    )\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport useWindowDimensions from \"../../Hooks/WindowSizeHook\";\r\nimport { useStore } from \"../../Store/store\";\r\nimport ButtonPrimary from \"../../UI/Button/ButtonPrimary\";\r\nimport \"./Navbar.css\";\r\nimport { history } from \"../../index\";\r\n\r\nfunction Navbar() {\r\n  const { uiStore, userStore } = useStore();\r\n\r\n  const { mobileMenu, setMobileMenu } = uiStore;\r\n\r\n  const { isLoggedIn, user } = userStore;\r\n\r\n  const { width } = useWindowDimensions();\r\n\r\n  useEffect(() => {\r\n    // for fixing a bug when the window is resized back to original, the mobile menu remains attached\r\n    if (width >= 992) {\r\n      setMobileMenu(false);\r\n    }\r\n    // disabling the scroll when the mobile menu is visible\r\n\r\n    if (mobileMenu) {\r\n      document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      document.body.style.overflow = \"visible\";\r\n    }\r\n  }, [setMobileMenu, width, mobileMenu]);\r\n\r\n  return (\r\n    <div id=\"header-wrap\" className=\"is-clearfix\">\r\n      <header\r\n        id=\"header\"\r\n        // in order to keep the navigation menu's position fixed when scrolled or on mobile to prevent glitchy padding-related 'bouncing'\r\n        className={`site-header `}\r\n      >\r\n        <div id=\"header-inner\" className=\"site-header-inner container\">\r\n          <div className=\"level top\">\r\n            <div className=\"level-left\">\r\n              <div id=\"header-logo\" className=\"site-logo \">\r\n                <div id=\"logo-inner\" className=\"site-logo-inner\">\r\n                  <Link to=\"/\">\r\n                    <img alt=\"logistics\" src=\"images/logo2.png\" />\r\n                    <span className=\"logo-text\">Invoice App</span>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"level-right-hamburger\" style={{ display: \"none\" }}>\r\n              <div\r\n                className={`hamburger-menu ${\r\n                  mobileMenu ? `expanded` : undefined\r\n                } `}\r\n                onClick={() => setMobileMenu(!mobileMenu)}\r\n              >\r\n                <span className=\"hamburger-menu-icon\"></span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"level main-menu\">\r\n            <div className=\"level-left\">\r\n              <div className=\"nav-wrap\">\r\n                <nav className=\"main-navigation left\">\r\n                  <ul className=\"menu\">\r\n                    <li className=\"menu-down-icon\">\r\n                      <NavLink to=\"/\" exact activeClassName=\"active\">\r\n                        Home\r\n                      </NavLink>\r\n                    </li>\r\n                    {userStore.isLoggedIn && userStore.user?.isAdmin && (\r\n                      <>\r\n                        <li className=\"menu-down-icon\">\r\n                          <NavLink\r\n                            to=\"/projects\"\r\n                            exact\r\n                            activeClassName=\"active\"\r\n                          >\r\n                            Projects\r\n                          </NavLink>\r\n                        </li>\r\n                        <li className=\"menu-down-icon\">\r\n                          <NavLink to=\"/clients\" exact activeClassName=\"active\">\r\n                            Clients\r\n                          </NavLink>\r\n                        </li>\r\n                        <li className=\"menu-down-icon\">\r\n                          <NavLink to=\"/users\" exact activeClassName=\"active\">\r\n                            Users\r\n                          </NavLink>\r\n                        </li>\r\n                      </>\r\n                    )}\r\n                    {userStore.isLoggedIn && !userStore.user?.isAdmin && (\r\n                      <>\r\n                        <li className=\"menu-down-icon\">\r\n                          <NavLink\r\n                            to=\"/invoices\"\r\n                            exact\r\n                            activeClassName=\"active\"\r\n                          >\r\n                            Invoices\r\n                          </NavLink>\r\n                        </li>\r\n                      </>\r\n                    )}\r\n                    {!isLoggedIn && (\r\n                      <li className=\"menu-down-icon\">\r\n                        <NavLink to=\"/userLogin\" exact activeClassName=\"active\">\r\n                          Login\r\n                        </NavLink>\r\n                      </li>\r\n                    )}\r\n                    {isLoggedIn && (\r\n                      <li className=\"menu-down-icon\">\r\n                        <span onClick={() => userStore.logout()}>Logout</span>\r\n                      </li>\r\n                    )}\r\n                  </ul>\r\n                </nav>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"level-right\">\r\n              <ul className=\"header-menu-icons social\">\r\n                <li>\r\n                  Welcome{\" \"}\r\n                  {isLoggedIn && (\r\n                    <span>\r\n                      {user?.name} {user?.surname}\r\n                    </span>\r\n                  )}{\" \"}\r\n                  !\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <div\r\n        id=\"mobile__menu\"\r\n        className={`overlay ${mobileMenu && \"overlay--active\"}`}\r\n      >\r\n        {mobileMenu && (\r\n          <div className=\"overlay__content\">\r\n            <Container>\r\n              <ul>\r\n                <li>\r\n                  <NavLink onClick={()=>setMobileMenu(false)} exact to=\"/\">\r\n                    Home<i className=\"fas fa-chevron-right\"></i>\r\n                  </NavLink>\r\n                </li>\r\n                {userStore.isLoggedIn && userStore.user?.isAdmin &&\r\n                  <>\r\n                   <li>\r\n                  <NavLink onClick={()=>setMobileMenu(false)} exact to=\"/projects\">\r\n                    Projects<i className=\"fas fa-chevron-right\"></i>\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink onClick={()=>setMobileMenu(false)} exact to=\"/clients\">\r\n                    Clients<i className=\"fas fa-chevron-right\"></i>\r\n                  </NavLink>\r\n                </li>\r\n                <li>\r\n                  <NavLink onClick={()=>setMobileMenu(false)} exact to=\"/users\">\r\n                    Users<i className=\"fas fa-chevron-right\"></i>\r\n                  </NavLink>\r\n                </li>\r\n                  </>\r\n                \r\n                }\r\n               {\r\n                 userStore.isLoggedIn && !userStore.user?.isAdmin\r\n                 &&\r\n                 <li>\r\n                 <NavLink onClick={()=>setMobileMenu(false)} exact to=\"/invoices\">\r\n                   Invoices<i className=\"fas fa-chevron-right\"></i>\r\n                 </NavLink>\r\n               </li>\r\n               }\r\n                <li>\r\n                  {userStore.isLoggedIn ?\r\n                  <ButtonPrimary text='Logout' clickEvent={ ()=>{\r\n                    userStore.logout();\r\n                    setMobileMenu(false);\r\n                  }}  type='button' />  \r\n                  : <ButtonPrimary text='Login' clickEvent={ ()=>{setMobileMenu(false);history.push('/userLogin')}}  type='button' />\r\n                }\r\n                </li>\r\n              </ul>\r\n            </Container>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Navbar);\r\n","import React from \"react\";\r\nimport \"./PreLoader.css\";\r\n\r\nexport default function PreLoader() {\r\n  return (\r\n    <div className=\"preloader-centered\">\r\n      <div className=\"blob-1\"></div>\r\n      <div className=\"blob-2\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Label } from \"semantic-ui-react\";\r\nimport \"./InputField.css\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n  onChange?:any;\r\n  value?:any\r\n}\r\n\r\nexport default function InputField(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <div className=\"form-control-custom is-expanded\">\r\n      <input className=\"input\" {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label\r\n          basic\r\n          color=\"red\"\r\n          style={{ marginTop: 10 }}\r\n          content={meta.error}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport React from 'react'\r\nimport { Header, Label } from 'semantic-ui-react';\r\nimport { useStore } from '../../Store/store';\r\nimport ButtonPrimary from '../../UI/Button/ButtonPrimary';\r\nimport InputField from '../../UI/Form/InputField';\r\nimport './Login.css';\r\nimport * as Yup from 'yup';\r\n\r\nexport default function Login() {\r\n    const {userStore} = useStore();\r\n\r\n    return<Formik\r\n    initialValues={{email: '', password: '',id:undefined, error: null}}\r\n    onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => \r\n        setErrors({error: error.response.data}))}\r\n        validationSchema={Yup.object({\r\n            email: Yup.string().email(x=>`${x.value} is not a valid email`).required(\"Email can not be empty\"),\r\n            password :Yup.string().required(\"Password can not be empty\")\r\n        })}\r\n  >\r\n    {({handleSubmit, errors}) => (\r\n       <div className=\"LoginForm\">\r\n           <div className=\"container\">\r\n           <div className=\"row\">\r\n           <div className=\"col-lg-12\">\r\n           <Form onSubmit={handleSubmit} autoComplete='off'>\r\n            <Header as='h2' content='Login' textAlign='center'  style={{marginBottom:50}}/>\r\n            <Header as='h6' content='Admin: bob@test.com' textAlign='center'  style={{marginBottom:50}}/>\r\n            <Header as='h6' content='Password: Pa$$w0rd (Same for the users)' textAlign='center'  style={{marginBottom:50}}/>\r\n            <InputField type=\"text\" name=\"email\" placeholder=\"Email\" />\r\n            <InputField type=\"password\" name=\"password\" placeholder=\"Password\" />\r\n            <ErrorMessage \r\n                name='error' render={() => \r\n                <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}\r\n            />\r\n            <ButtonPrimary type=\"submit\" text=\"Login\"/>\r\n        </Form>\r\n           </div>\r\n       </div>\r\n       </div>\r\n       </div>\r\n    )}\r\n  </Formik>\r\n}\r\n","import React from 'react'\r\nimport './TitleBar.css';\r\n\r\ninterface Props{\r\n  title:string;\r\n  subTitle:string;\r\n}\r\n\r\nexport default function TitleBar({title,subTitle}:Props) {\r\n    return (\r\n      <>\r\n      <p className=\"heading-title-top has-text-centered\">{title}</p>\r\n      <h1 className=\"heading-title style-3 multiline\">{subTitle}</h1>\r\n      </>\r\n    )\r\n}\r\n","export interface AppUser{\r\n    id:string; \r\n    name:string;\r\n    surname:string;\r\n    email:string;\r\n    isAdmin:string;\r\n    password:string;\r\n}\r\n\r\nexport  class AppFormValues {\r\n    id?:string=''; \r\n    name:string='';\r\n    surname:string='';\r\n    email:string='';\r\n    isAdmin:string='false';\r\n    password?:string='';\r\n    constructor(values?:AppFormValues) {\r\n\r\n       if(values)\r\n       {\r\n        this.id = values.id;\r\n        this.email = values.email;\r\n        this.name = values.name;\r\n        this.surname = values.surname;\r\n        this.isAdmin = values.isAdmin;\r\n        this.password =values.password;\r\n       }\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport \"./InputField.css\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  onChange?:any;\r\n  value?:any;\r\n  error?:any;\r\n}\r\n\r\nexport default function InputFieldSecondary(props: Props) {\r\n \r\n  return (\r\n    <div className=\"form-control-custom is-expanded\">\r\n      <input className=\"input\"  {...props} />\r\n      {props.error ? <div>{props.error}</div> : null}\r\n    </div>\r\n  );\r\n}\r\n","import \"./InputField.css\";\r\nimport React from \"react\";\r\n\r\ninterface Props {\r\n    placeholder?:string;\r\n  name: string;\r\n  type?: string;\r\n  onChange: any;\r\n  value: any;\r\n  children:any;\r\n  defaultValue?:any;\r\n  onClick?:any;\r\n}\r\n\r\nexport default function SelectField(props: Props) {\r\n  return (\r\n    <div className=\"form-control-custom is-expanded\">\r\n      <select\r\n        name={props.name}\r\n        onChange={props.onChange}\r\n        value={props.value}\r\n        onClick={props.onClick}\r\n      >\r\n        {props.children}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import { useFormik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AppFormValues } from \"../../Models/appUser\";\r\nimport { useStore } from \"../../Store/store\";\r\nimport ButtonPrimary from \"../../UI/Button/ButtonPrimary\";\r\nimport InputFieldSecondary from \"../../UI/Form/InputFieldSecondary\";\r\nimport SelectField from \"../../UI/Form/SelectField\";\r\nimport * as Yup from 'yup';\r\nimport { Header } from \"semantic-ui-react\";\r\n\r\nfunction UserForm() {\r\n  const [appUser, setAppUser] = useState<AppFormValues>(new AppFormValues());\r\n\r\n  const { appUserStore } = useStore();\r\n  useEffect(() => {\r\n    if (appUserStore.selectedAppUser) {\r\n      setAppUser(appUserStore.selectedAppUser);\r\n    }\r\n    return () => appUserStore.setSelectedAppUser(undefined);\r\n  }, [appUserStore, appUserStore.selectedAppUser]);\r\n\r\n  const handleSubmitCustom = (values: AppFormValues) => {\r\n    appUser.id ? appUserStore.edit(values) : appUserStore.add(values);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    validationSchema:Yup.object({\r\n      name:Yup.string().required(\"Name can not be empty\"),\r\n      surname:Yup.string().required(\"Surname can not be empty\"),\r\n      email:Yup.string().email(x=>`${x.value} is not a valid email`).required(\"Email can not be empty\"),\r\n      password:!appUser.id?Yup.string().required(\"Password can not be empty\").matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,20}$/,\"Password must contain symbol, uppercase and number\").min(4).max(20):Yup.string(),\r\n\r\n    }),\r\n    initialValues: appUser,\r\n    onSubmit: (values) => {\r\n      handleSubmitCustom(values);\r\n    },\r\n  });\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n       <Header as='h2' content={appUser.id?\"Edit User\":\"Add User\"} color='teal' textAlign='center'  style={{marginBottom:50}}/>\r\n      <InputFieldSecondary\r\n        placeholder=\"Name\"\r\n        error={formik.errors.name}\r\n        name=\"name\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.name}\r\n      />\r\n      <InputFieldSecondary\r\n        placeholder=\"Surname\"\r\n        name=\"surname\"\r\n        error={formik.errors.surname}\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.surname}\r\n      />\r\n      <InputFieldSecondary\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        error={formik.errors.email}\r\n        type=\"email\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.email}\r\n      />\r\n\r\n      <InputFieldSecondary\r\n        placeholder={appUserStore.selectedAppUser?\"Password - Leave empty for no changes\":\"Password\"}\r\n        name=\"password\"\r\n        type=\"password\"\r\n        error={formik.errors.password}\r\n        onChange={formik.handleChange}\r\n        value={formik.values.password}\r\n      />\r\n\r\n      <SelectField\r\n        name=\"IsAdmin\"\r\n        onChange={(e:any)=>{formik.setValues({...formik.values,isAdmin:e.target.value})}}\r\n        value={formik.values.isAdmin}\r\n      >\r\n        <option value=\"true\">Admin</option>\r\n        <option value=\"false\">User</option>\r\n      </SelectField>\r\n      <ButtonPrimary type=\"submit\" text=\"Submit\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default observer(UserForm);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react'\r\nimport { Container } from 'react-bootstrap';\r\nimport { Header } from 'semantic-ui-react';\r\nimport { AppUser } from '../../Models/appUser';\r\nimport { useStore } from '../../Store/store'\r\nimport ButtonPrimary from '../../UI/Button/ButtonPrimary';\r\nimport TitleBar from '../../UI/TitleBar/TitleBar';\r\nimport UserForm from './UserForm';\r\n\r\n function Users() {\r\n\r\n    const {appUserStore,modalStore} = useStore();\r\n    const {appUsers,deleteUser} = appUserStore;\r\n\r\n    useEffect(()=>{\r\n        appUserStore.getUsers();\r\n    },[appUserStore])\r\n\r\n    const launchEditForm = (x:AppUser) => {\r\n      appUserStore.setSelectedAppUser(x);\r\n      modalStore.show(<UserForm/>);\r\n    }\r\n\r\n    return (\r\n     <Container>\r\n        <Header as='h1' content=\"Users\" textAlign='center'  style={{margin:\"50px 0px\"}}/>\r\n       <ButtonPrimary type=\"button\" text=\"Add User\" clickEvent={()=>modalStore.show(<UserForm/>)} />\r\n      {appUsers.length>0 ?\r\n       <table className=\"table mt-5 mb-5\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Surname</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Role </th>\r\n            <th scope=\"col\">Delete</th>\r\n            <th scope=\"col\">Edit</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n         \r\n      {appUsers.map(x=>\r\n         <tr key={x.id} >\r\n         <th scope=\"row\">{x.id}</th>\r\n         <td>{x.name}</td>\r\n         <td>{x.surname}</td>\r\n         <td>{x.email}</td>\r\n         <td>{x.isAdmin?\"Admin\":\"User\"}</td>\r\n         <td><ButtonPrimary type=\"button\" text=\"Delete\" clickEvent={()=>deleteUser(x.id!)} /></td>\r\n         <td><ButtonPrimary type=\"button\" text=\"Edit\" clickEvent={()=>launchEditForm(x)} /></td>\r\n       </tr>)}\r\n         \r\n        </tbody>\r\n      </table>\r\n      : <div style={{margin:\"50px 0\"}} >\r\n      <TitleBar title=\"Start by Adding Users\" subTitle =\"No Users other than Admin\" />\r\n    </div>\r\n      }\r\n     </Container>\r\n    )\r\n}\r\n\r\nexport default observer(Users);\r\n","export interface Project{\r\n    name:string;\r\n    id?:string;\r\n}\r\n\r\nexport interface ProjectFormValues{ //for registration\r\n    name:string;\r\n    id?:string;\r\n}\r\n\r\nexport class ProjectFormValues\r\n{\r\n    name:string =\"\";\r\n\r\n    constructor(initialValues?:ProjectFormValues){\r\n        if(initialValues){\r\n            this.name=initialValues.name;\r\n        }\r\n    }\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { Header, Label } from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\nimport { ProjectFormValues } from '../../Models/project';\r\nimport { useStore } from '../../Store/store';\r\nimport ButtonPrimary from '../../UI/Button/ButtonPrimary';\r\nimport InputField from '../../UI/Form/InputField';\r\n\r\nfunction ProjectForm() {\r\n\r\n  const {projectStore} = useStore();\r\n\r\n  const [project, setProject] = useState<ProjectFormValues>(new ProjectFormValues());\r\n\r\n  useEffect(()=>{\r\n   if(projectStore.selectedProject){\r\n    setProject(projectStore.selectedProject);\r\n   }\r\n\r\n    return ()=>projectStore.setSelectedProject(undefined);\r\n  },[projectStore, projectStore.selectedProject, projectStore.setSelectedProject])\r\n\r\n  const handleSubmitCustom = (values:ProjectFormValues) => {\r\n    project.id?projectStore.edit(values):projectStore.add(values);\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n    initialValues={project}\r\n    enableReinitialize\r\n    onSubmit={(values, {setErrors}) => handleSubmitCustom(values)}\r\n        validationSchema={Yup.object({\r\n            name: Yup.string().required(\"Name can not be empty\"),\r\n        })}\r\n  >\r\n    {({handleSubmit, errors}) => (\r\n       <Form onSubmit={handleSubmit} autoComplete='off'>\r\n       <Header as='h2' content={projectStore.selectedProject?\"Edit Project\":\"Add Project\"} color='teal' textAlign='center'  style={{marginBottom:50}}/>\r\n       <InputField type=\"text\" name=\"name\" placeholder=\"Project Name\" />\r\n       <ErrorMessage \r\n           name='error' render={() => \r\n           <Label style={{marginBottom: 10}} basic color='red' content={errors}/>\r\n         }\r\n       />\r\n       <ButtonPrimary type=\"submit\" text={projectStore.selectedProject?\"Edit\":\"Add\"}/>\r\n   </Form>\r\n    )}\r\n  </Formik>\r\n  );\r\n}\r\n\r\nexport default observer(ProjectForm);","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { Project } from \"../../Models/project\";\r\nimport { useStore } from \"../../Store/store\";\r\nimport ButtonPrimary from \"../../UI/Button/ButtonPrimary\";\r\nimport TitleBar from \"../../UI/TitleBar/TitleBar\";\r\nimport ProjectForm from \"./ProjectForm\";\r\n\r\nfunction Projects() {\r\n  const { projectStore, modalStore } = useStore();\r\n  const { projects, getProjects } = projectStore;\r\n\r\n  useEffect(() => {\r\n    getProjects();\r\n  }, [getProjects]);\r\n\r\n  const launchEditForm = (x: Project) => {\r\n    projectStore.setSelectedProject(x);\r\n    modalStore.show(<ProjectForm />);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n        <Header as='h1' content=\"Projects\" textAlign='center'  style={{margin:\"50px 0px\"}}/>\r\n      <ButtonPrimary\r\n        type=\"button\"\r\n        text=\"Add Project\"\r\n        clickEvent={() => modalStore.show(<ProjectForm />)}\r\n      />\r\n\r\n      {projects.length > 0 ? (\r\n        <table className=\"table mt-5 mb-5\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Delete</th>\r\n              <th scope=\"col\">Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {projects.map((x) => (\r\n              <tr key={x.id}>\r\n                <th scope=\"row\">{x.id}</th>\r\n                <td>{x.name}</td>\r\n                <td>\r\n                  <ButtonPrimary\r\n                    type=\"button\"\r\n                    text=\"Delete\"\r\n                    clickEvent={() => projectStore.delete(x.id!)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <ButtonPrimary\r\n                    type=\"button\"\r\n                    text=\"Edit\"\r\n                    clickEvent={() => launchEditForm(x)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ):\r\n       <div style={{margin:\"50px 0\"}} >\r\n      <TitleBar title=\"Start by Adding Projects\" subTitle =\"No Projects\" />\r\n    </div>}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default observer(Projects);\r\n","export interface Client{\r\n    id:string,\r\n    name:string,\r\n    surname:string\r\n}\r\n\r\nexport interface ClientFormValues{\r\n    id?:string,\r\n    name:string,\r\n    surname:string\r\n}\r\n\r\nexport class ClientFormValues\r\n{\r\n    name:string =\"\";\r\n    surname:string=\"\";\r\n\r\n    constructor(initialValues?:ClientFormValues){\r\n        if(initialValues){\r\n            this.name=initialValues.name;\r\n            this.surname = initialValues.surname;\r\n        }\r\n    }\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useEffect, useState } from 'react';\r\nimport { Header, Label } from 'semantic-ui-react';\r\nimport * as Yup from 'yup';\r\nimport { ClientFormValues } from '../../Models/client';\r\nimport { useStore } from '../../Store/store';\r\nimport ButtonPrimary from '../../UI/Button/ButtonPrimary';\r\nimport InputField from '../../UI/Form/InputField';\r\n\r\nfunction ClientForm() {\r\n\r\n  const {clientStore} = useStore();\r\n\r\n  const [client, setClient] = useState<ClientFormValues>(new ClientFormValues());\r\n\r\n  useEffect(()=>{\r\n   if(clientStore.selectedClient){\r\n    setClient(clientStore.selectedClient);\r\n   }\r\n\r\n    return ()=>clientStore.setSelectedClient(undefined);\r\n  },[clientStore, clientStore.selectedClient, clientStore.setSelectedClient])\r\n\r\n  const handleSubmitCustom = (values:ClientFormValues) => {\r\n    client.id?clientStore.edit(values):clientStore.add(values);\r\n  }\r\n\r\n  return (\r\n    <Formik\r\n    initialValues={client}\r\n    enableReinitialize\r\n    onSubmit={(values, {setErrors}) => handleSubmitCustom(values)}\r\n        validationSchema={Yup.object({\r\n            name: Yup.string().required(\"Name can not be empty\"),\r\n            surname :Yup.string().required(\"Surname can not be empty\")\r\n        })}\r\n  >\r\n    {({handleSubmit, errors}) => (\r\n       <Form onSubmit={handleSubmit} autoComplete='off'>\r\n       <Header as='h2' content={clientStore.selectedClient?\"Edit Client\":\"Add Client\"} color='teal' textAlign='center'  style={{marginBottom:50}}/>\r\n       <InputField type=\"text\" name=\"name\"  placeholder=\"Name\" />\r\n       <InputField type=\"text\" name=\"surname\" placeholder=\"Surname\" />\r\n       <ErrorMessage \r\n           name='error' render={() => \r\n           <Label style={{marginBottom: 10}} basic color='red' content={errors}/>\r\n         }\r\n       />\r\n       <ButtonPrimary type=\"submit\" text=\"Add\"/>\r\n   </Form>\r\n    )}\r\n  </Formik>\r\n  );\r\n}\r\n\r\nexport default observer(ClientForm);","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { Client } from \"../../Models/client\";\r\nimport { useStore } from \"../../Store/store\";\r\nimport ButtonPrimary from \"../../UI/Button/ButtonPrimary\";\r\nimport TitleBar from \"../../UI/TitleBar/TitleBar\";\r\nimport ClientForm from \"./ClientForm\";\r\n\r\nfunction Clients() {\r\n  const { clientStore, modalStore } = useStore();\r\n  const { clients, getClients } = clientStore;\r\n\r\n  useEffect(() => {\r\n    getClients();\r\n  }, [getClients]);\r\n\r\n  const launchEditForm = (x: Client) => {\r\n    clientStore.setSelectedClient(x);\r\n    modalStore.show(<ClientForm />);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n        <Header as='h1' content=\"Clients\" textAlign='center'  style={{margin:\"50px 0px\"}}/>\r\n      <ButtonPrimary\r\n        type=\"button\"\r\n        text=\"Add Client\"\r\n        clickEvent={() => modalStore.show(<ClientForm />)}\r\n      />\r\n      {clients.length > 0 ? (\r\n        <table className=\"table mt-5 mb-5\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Surname</th>\r\n              <th scope=\"col\">Delete</th>\r\n              <th scope=\"col\">Edit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {clients.map((x) => (\r\n              <tr key={x.id}>\r\n                <th scope=\"row\">{x.id}</th>\r\n                <td>{x.name}</td>\r\n                <td>{x.surname}</td>\r\n                <td>\r\n                  <ButtonPrimary\r\n                    type=\"button\"\r\n                    text=\"Delete\"\r\n                    clickEvent={() => clientStore.delete(x.id!)}\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <ButtonPrimary\r\n                    type=\"button\"\r\n                    text=\"Edit\"\r\n                    clickEvent={() => launchEditForm(x)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ):\r\n      <div style={{margin:\"50px 0\"}} >\r\n        <TitleBar title=\"Start by Adding Clients\" subTitle =\"No Clients\" />\r\n      </div>}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default observer(Clients);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { useStore } from \"../../Store/store\";\r\n\r\n function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  const {  hide, body,active } = modalStore;\r\n\r\n  return (\r\n    <Modal show={active} onHide={hide}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Invoice App</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\n\r\nexport default observer(ModalContainer);","import { Client } from \"./client\";\r\nimport { Project } from \"./project\";\r\n\r\nexport interface Invoice{\r\n    id:number;\r\n    totalAmount:number;\r\n    taxAmount:number;\r\n    project:Project|undefined;\r\n    client:Client|undefined;\r\n    note:string;\r\n    isPending:boolean;\r\n    netAmount:number;\r\n    date:Date;\r\n    projectId?:string;\r\n    clientId?:string;\r\n}\r\n\r\nexport interface InvoiceFormValues{\r\n    id?:number;\r\n    totalAmount:number;\r\n    taxAmount:number;\r\n    projectId?:string;\r\n    clientId?:string;\r\n    note:string;\r\n    date:Date;\r\n    isPending:boolean;\r\n\r\n}\r\n\r\nexport class InvoiceFormValues{\r\n    id?:number=0;\r\n    totalAmount:number=0;\r\n    taxAmount:number=0;\r\n    projectId?:string='';\r\n    clientId?:string='';\r\n    note:string='';\r\n    date:Date=new Date();\r\n    isPending:boolean=true;\r\n\r\n    \r\n\r\n    constructor(values?:InvoiceFormValues)\r\n    {\r\n        \r\n        if(values){\r\n            this.id = values.id;\r\n            this.date=values.date;\r\n            this.clientId=values.clientId;\r\n            this.taxAmount= values.taxAmount;\r\n            this.projectId = values.projectId;\r\n            this.note = values.note;\r\n            this.totalAmount = values.totalAmount\r\n            this.isPending = values.isPending;\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport \"./InputField.css\";\r\nimport DatePicker from 'react-datepicker';\r\nimport \"./InputField.css\";\r\ninterface Props {\r\n  name: string;\r\n  type?: string;\r\n  onChange?:any;\r\n  value?:Date;\r\n  error?:any;\r\n  isStart?:boolean;\r\n  isEnd?:boolean;\r\n}\r\n\r\nexport default function DateInputField({name,error,isEnd=false,isStart=false,onChange,type,value}: Props) {\r\n \r\n  return (\r\n    <div className=\"form-control-custom is-expanded\">\r\n    <DatePicker name={name} showFullMonthYearPicker selectsStart={isStart} selectsEnd={isEnd} onChange={onChange}  selected={(value&& new Date(value))||null}/>\r\n    {error ? <div>{error}</div> : null}\r\n    </div>\r\n          \r\n  );\r\n}\r\n","import React, { ChangeEvent } from \"react\";\r\nimport \"./SwitchField.css\";\r\n\r\ninterface Props {\r\n  onChange?: { (e: ChangeEvent<any>): void };\r\n  value?: any;\r\n  name: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function SwitchField(props: Props) {\r\n  return (\r\n    <div className=\"switch-field\">\r\n      <label htmlFor={props.label}>{props.label} </label>\r\n      <label className=\"switch\">\r\n        <input {...props} type=\"checkbox\"  checked={props.value===true} />\r\n        <span className=\"slider round\"></span>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import { useFormik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useStore } from \"../../Store/store\";\r\nimport ButtonPrimary from \"../../UI/Button/ButtonPrimary\";\r\nimport InputFieldSecondary from \"../../UI/Form/InputFieldSecondary\";\r\nimport SelectField from \"../../UI/Form/SelectField\";\r\n// import * as Yup from \"yup\";\r\nimport { InvoiceFormValues } from \"../../Models/invoice\";\r\nimport DateInputField from \"../../UI/Form/DateInputField\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { Project } from \"../../Models/project\";\r\nimport { Client } from \"../../Models/client\";\r\nimport SwitchField from \"../../UI/Form/SwitchField\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props{\r\n  appLoaded:boolean;\r\n  projects:Project[];\r\n  clients:Client[]\r\n}\r\n\r\nfunction InvoiceForm({appLoaded,clients,projects}:Props) {\r\n  const [invoice, setInvoice] = useState<InvoiceFormValues>(\r\n    new InvoiceFormValues()\r\n  );\r\n  const { invoiceStore,modalStore } = useStore();\r\n  \r\n  useEffect(()=>{\r\n    if(invoiceStore.selectedInvoice){\r\n      setInvoice(invoiceStore.selectedInvoice);\r\n    }else{\r\n     appLoaded&&setInvoice(new InvoiceFormValues({\r\n      date:new Date(),\r\n      note:'',\r\n      taxAmount:0,\r\n      totalAmount:0,\r\n      clientId:clients[0].id,\r\n      projectId:projects[0].id,\r\n      isPending:true\r\n    }))\r\n    }\r\n    return () => invoiceStore.setSelectedInvoice(undefined);\r\n  }, [appLoaded, clients, invoiceStore, projects])\r\n\r\n\r\n  const handleSubmitCustom = (values: InvoiceFormValues) => {\r\n    invoice.id? invoiceStore.edit(values) : invoiceStore.add(values);\r\n    console.log(values);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: invoice,\r\n    onSubmit: (values) => {\r\n      handleSubmitCustom(values);\r\n      // console.log(values.isPending)\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      {!appLoaded && <h5>Please start by adding <Link to=\"/projects\"  onClick={()=>modalStore.hide()} >Projects</Link> and <Link to=\"/clients\"  onClick={()=>modalStore.hide()} >Clients</Link> first</h5>}\r\n      {appLoaded && (\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Header\r\n            as=\"h2\"\r\n            content={invoice.id! > 0 ? \"Edit Invoice\" : \"Add Invoice\"}\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n            style={{ marginBottom: 50 }}\r\n          />\r\n          <InputFieldSecondary\r\n            placeholder=\"Total Amount\"\r\n            error={formik.errors.totalAmount}\r\n            name=\"totalAmount\"\r\n            type=\"number\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.totalAmount}\r\n          />\r\n          <InputFieldSecondary\r\n            placeholder=\"TaxAmount\"\r\n            name=\"taxAmount\"\r\n            error={formik.errors.taxAmount}\r\n            type=\"number\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.taxAmount}\r\n          />\r\n\r\n          <DateInputField\r\n            name=\"date\"\r\n            value={formik.values.date}\r\n            error={formik.errors.date}\r\n            onChange={(data: Date) => formik.setFieldValue(\"date\", data)}\r\n          />\r\n\r\n          <InputFieldSecondary\r\n            placeholder=\"Note\"\r\n            name=\"note\"\r\n            type=\"text\"\r\n            error={formik.errors.note}\r\n            onChange={formik.handleChange}\r\n            value={formik.values.note}\r\n          />\r\n\r\n          <SelectField\r\n            placeholder=\"Select Project\"\r\n            name=\"projectId\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.projectId}\r\n          >\r\n            {projects.map((x) => (\r\n              <option key={x.id} value={x.id}>\r\n                {x.name}\r\n              </option>\r\n            ))}\r\n          </SelectField>\r\n          <SelectField\r\n            placeholder=\"Select Client\"\r\n            name=\"clientId\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.clientId}\r\n          >\r\n            {clients.map((x) => (\r\n              <option key={x.id} value={x.id}>\r\n                {x.name}\r\n              </option>\r\n            ))}\r\n          </SelectField>\r\n          <SwitchField name=\"isPending\" \r\n          value={formik.values.isPending} \r\n          onChange={formik.handleChange}\r\n          label= {\"Pending?\"}\r\n        />\r\n          <ButtonPrimary type=\"submit\" text=\"Submit\" />\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(InvoiceForm);\r\n","export interface InvocieSearchParams{\r\n    startDate?:Date;\r\n    endDate?:Date;\r\n    searchString?:string;\r\n    byProject?:boolean;\r\n    byClient?:boolean;\r\n}\r\n\r\nexport class InvoiceSearchParams{\r\n    startDate?:Date= new Date('2021-1-1');\r\n    endDate?:Date=new Date('2021-12-1');\r\n    searchString?:string;\r\n    byProject?:boolean;\r\n    byClient?:boolean;\r\n\r\n    constructor(values?:InvoiceSearchParams)\r\n    {\r\n        if(values){\r\n            this.startDate= values.startDate;\r\n            this.endDate= values.endDate;\r\n            this.searchString= values.searchString;\r\n            this.byClient= values.byClient;\r\n            this.byProject= values.byProject;\r\n        }\r\n    }\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Invoice } from \"../../Models/invoice\";\r\nimport { useStore } from \"../../Store/store\";\r\nimport ButtonPrimary from \"../../UI/Button/ButtonPrimary\";\r\nimport InvoiceForm from \"./InvoiceForm\";\r\nimport { format } from \"date-fns\";\r\nimport { useFormik } from \"formik\";\r\nimport DateInputField from \"../../UI/Form/DateInputField\";\r\nimport InputFieldSecondary from \"../../UI/Form/InputFieldSecondary\";\r\nimport SwitchField from \"../../UI/Form/SwitchField\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { InvoiceSearchParams } from \"../../Models/searchParams\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport TitleBar from \"../../UI/TitleBar/TitleBar\";\r\nimport { exportToXLS } from \"../../Helper/ExportToExcel\";\r\n\r\nfunction Invoices() {\r\n  const [appLoaded, setAppLoaded] = useState(false);\r\n\r\n  const { invoiceStore, modalStore, projectStore, clientStore } = useStore();\r\n  const { invoices, getInvoices } = invoiceStore;\r\n\r\n  useEffect(() => {\r\n    getInvoices();\r\n  }, [getInvoices]);\r\n\r\n  const launchEditForm = (x: Invoice) => {\r\n    invoiceStore.setSelectedInvoice({\r\n      ...x,\r\n      projectId: x.project?.id,\r\n      clientId: x.client?.id,\r\n    });\r\n    modalStore.show(\r\n      <InvoiceForm\r\n        appLoaded={appLoaded}\r\n        projects={projectStore.projects}\r\n        clients={clientStore.clients}\r\n      />\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    projectStore\r\n      .getProjects()\r\n      .then(() => clientStore.getClients())\r\n      .then(() => {\r\n        if (\r\n          clientStore.clients.length > 0 &&\r\n          projectStore.projects.length > 0\r\n        ) {\r\n          setAppLoaded(true);\r\n        }\r\n      });\r\n    return () => {\r\n      invoiceStore.setFilterParams(\r\n        new InvoiceSearchParams({\r\n          byClient: false,\r\n          byProject: false,\r\n          endDate: new Date(\"2021-12-1\"),\r\n          searchString: \"\",\r\n          startDate: new Date(\"2021-1-1\"),\r\n        })\r\n      );\r\n    };\r\n  }, [clientStore, invoiceStore, projectStore]);\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: invoiceStore.filterParams,\r\n    onSubmit: (values) => {\r\n      console.log(values.byProject);\r\n      console.log(values.byClient);\r\n      invoiceStore.setFilterParams(values);\r\n      invoiceStore.getInvoices();\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Header\r\n          as=\"h1\"\r\n          content=\"Invoices\"\r\n          textAlign=\"center\"\r\n          style={{ margin: \"50px 0px\" }}\r\n        />\r\n        <ButtonPrimary\r\n          type=\"button\"\r\n          text=\"Add Invoice\"\r\n          clickEvent={() =>\r\n            modalStore.show(\r\n              <InvoiceForm\r\n                appLoaded={appLoaded}\r\n                projects={projectStore.projects}\r\n                clients={clientStore.clients}\r\n              />\r\n            )\r\n          }\r\n        />\r\n        \r\n        <form onSubmit={formik.handleSubmit}>\r\n          <DateInputField\r\n            name=\"startDate\"\r\n            value={formik.values.startDate}\r\n            error={formik.errors.startDate}\r\n            onChange={(data: Date) => formik.setFieldValue(\"startDate\", data)}\r\n            isStart={true}\r\n          />\r\n          <DateInputField\r\n            name=\"endDate\"\r\n            value={formik.values.endDate}\r\n            error={formik.errors.endDate}\r\n            onChange={(data: Date) => formik.setFieldValue(\"endDate\", data)}\r\n            isEnd={true}\r\n          />\r\n\r\n          <SwitchField\r\n            name=\"byProject\"\r\n            value={formik.values.byProject}\r\n            onChange={formik.handleChange}\r\n            label={\"Search by Projects only\"}\r\n          />\r\n          <SwitchField\r\n            name=\"byClient\"\r\n            value={formik.values.byClient}\r\n            onChange={formik.handleChange}\r\n            label={\"Search by Clients only\"}\r\n          />\r\n\r\n          <InputFieldSecondary\r\n            name=\"searchString\"\r\n            type=\"text\"\r\n            placeholder=\"Search...\"\r\n            value={formik.values.searchString}\r\n            onChange={formik.handleChange}\r\n            error={formik.errors.searchString}\r\n          />\r\n          <ButtonPrimary type=\"submit\" text=\"Search\" />\r\n          <ButtonPrimary\r\n          style={{marginLeft:\"20px\"}}\r\n          type=\"button\"\r\n          text=\"Export To XL\"\r\n          clickEvent={() => exportToXLS(invoiceStore.invoices, `Invoices - ${new Date().getMilliseconds()}`)}\r\n        />\r\n        </form>\r\n      </Container>\r\n\r\n      <Container>\r\n        {invoices.length > 0 ? (\r\n          <table className=\"table mt-5 mb-5\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">№</th>\r\n                <th scope=\"col\">Date</th>\r\n                <th scope=\"col\">Net Amount</th>\r\n                <th scope=\"col\">Tax Amount</th>\r\n                <th scope=\"col\">Total Amount</th>\r\n                <th scope=\"col\">Project Name</th>\r\n                <th scope=\"col\">Client Name</th>\r\n                <th scope=\"col\">Note</th>\r\n                <th scope=\"col\">Pending</th>\r\n                <th scope=\"col\">Edit</th>\r\n                <th scope=\"col\">Delete</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {invoices.map((x) => (\r\n                <tr key={x.id}>\r\n                  <th scope=\"row\">{x.id}</th>\r\n                  <td>{format(x.date, \"dd MMM yyyy h:mm aa\")}</td>\r\n                  <td>{x.netAmount}</td>\r\n                  <td>{x.taxAmount}</td>\r\n                  <td>{x.totalAmount}</td>\r\n                  <td>{x.project?.name}</td>\r\n                  <td>{x.client?.name}</td>\r\n                  <td>{x.note}</td>\r\n                  <td>{x.isPending ? \"true\" : \"false\"}</td>\r\n                  <td>\r\n                    <ButtonPrimary\r\n                      type=\"button\"\r\n                      text=\"Edit\"\r\n                      clickEvent={() => launchEditForm(x)}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <ButtonPrimary\r\n                      type=\"button\"\r\n                      text=\"Delete\"\r\n                      clickEvent={() => invoiceStore.delete(x.id!)}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n            <tfoot>\r\n              <tr>\r\n                <td>#</td>\r\n                <td className=\"totalsTitle\">Totals</td>\r\n                <td className=\"totals\">\r\n                  {invoiceStore.calcAmounts[1] - invoiceStore.calcAmounts[0]}\r\n                </td>\r\n                <td className=\"totals\">{invoiceStore.calcAmounts[0]}</td>\r\n                <td className=\"totals\">{invoiceStore.calcAmounts[1]}</td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n                <td></td>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        ) : (\r\n          <div style={{ margin: \"50px 0\" }}>\r\n            <TitleBar title=\"Start by Adding Invoices\" subTitle=\"No Invoices\" />\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(Invoices);\r\n","import * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nexport  const exportToXLS = (apiData:any, fileName:string) => {\r\n    const ws = XLSX.utils.json_to_sheet(apiData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\" });\r\n    FileSaver.saveAs(data, fileName + \".xlsx\");\r\n  };","import React from 'react'\r\nimport { useStore } from '../../Store/store'\r\nimport TitleBar from '../../UI/TitleBar/TitleBar'\r\n\r\nexport default function Dashboard() {\r\n\r\n    const {userStore} = useStore();\r\n\r\n    return (\r\n        <div style={{margin:\"200px 0\"}} >\r\n            <TitleBar subTitle={userStore.isLoggedIn?`Please Proceed`:\"Please Login\"} title=\"Welcome\" />\r\n        </div>\r\n    )\r\n}\r\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useStore } from \"./Store/store\";\nimport Footer from \"./Components/Footer/Footer\";\nimport Navbar from \"./Components/Navbar/Navbar\";\nimport PreLoader from \"./UI/PreLoader/PreLoader\";\nimport Login from \"./Components/Login/Login\";\nimport { Route } from \"react-router\";\nimport Switch from \"react-bootstrap/esm/Switch\";\nimport Users from \"./Components/Users/Users\";\nimport Projects from \"./Components/Projects/Projects\";\nimport Clients from \"./Components/Clients/Clients\";\nimport ModalContainer from \"./UI/Modal/ModalContainer\";\nimport Invoice from \"./Components/Invoices/Invoice\";\nimport Dashboard from \"./Components/DashBoard/Dashboard\";\nimport { ToastContainer } from \"react-toastify\";\n\nfunction App() {\n  const { uiStore, commonStore, userStore } = useStore();\n\n  const { handleScroll, preLoader, setPreLoader } = uiStore;\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n\n    if (commonStore.token) {\n      userStore.getUser().finally(() => uiStore.setPreLoader(false));\n    } else {\n      uiStore.setPreLoader(false);\n    }\n  }, [commonStore, handleScroll, setPreLoader, uiStore, userStore]);\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" />\n\n      {preLoader && <PreLoader />}\n      {!preLoader&&\n      <>\n      \n      <ModalContainer />\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/userLogin\" component={Login} />\n        {userStore.isLoggedIn && userStore.user?.isAdmin && (\n          <>\n            <Route exact path=\"/users\" component={Users} />\n            <Route exact path=\"/projects\" component={Projects} />\n            <Route exact path=\"/clients\" component={Clients} />\n            <Route exact path=\"/invoices\" component={Invoice} />\n          </>\n        )}\n        {userStore.isLoggedIn && !userStore.user?.isAdmin &&\n          <Route exact path=\"/invoices\" component={Invoice} />\n        }\n        <Route exact path=\"/\" component={Dashboard} />\n      </Switch>\n      <Footer />\n      </>}\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { store, StoreContext } from \"./Store/store\";\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './Layout/ScrollToTop';\nimport 'react-datepicker/dist/react-datepicker.css'\nimport 'react-toastify/dist/ReactToastify.min.css'\n\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n   <Router history={history}>\n      <ScrollToTop/>\n    <App />\n    </Router >\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}